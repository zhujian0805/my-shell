#!/bin/ksh
#set -vx
#--------------------------- COPYRIGHT NOTICE ----------------------------------
#*******************************************************************************
#
# Copyright (c) 2009 Perot Systems Corporation
# All Rights Reserved
# Copyright Notice Does Not Imply Publication
#
#*******************************************************************************
#
#  NAME:               ecrtp_edi_history.ksh
#
#  DESCRIPTION:        This script will run the ECRTP map for PPIC's
#                      EDI HISTORY, this is the first step before running the
#                      java program to load the data into the database.  
#
#
#
#  THIS PROGRAM WAS CIMPLY COPIED FROM DENVER'S METHOD, IT WILL RUN PROPERLY 
#  PROVIDED THE JAVA PROGRAM IS PROPERLY NAMED, AND THAT THE FILES USE THE 
#  SAME NAMING CONVENTION 
#
#
#
# 
#                      The command line for this is:
## wrmi32 C:\PPIC-SCRUB\denver\en23101007-837H.txt                  -xl -dg C:\Diamond\PPIC\837-HIST -dt C:\Diamond\PPIC\837-HIST -n -it  -o -w -l -b -wx 1  -af C:\Diamond\output\OUTPUT.TXT C:\PPIC-SCRUB\denver\output-inst.txt
## wrmi32 C:\PPIC-SCRUB\test-edi-hist\test-data-x12\UWH4010-x12.txt -xl -dg C:\Diamond\PPIC\837-HIST -dt C:\Diamond\PPIC\837-HIST -n -it  -o -w -l -b -wx 1  -af C:\Diamond\output\OUTPUT.TXT C:\PPIC-SCRUB\test-edi-hist\test-data-extract\uwhc-ext.txt
#
#  BAT FILE FROM PC...    # wrmi32 C:\PPIC-SCRUB\test-edi-hist\test-data-x12\UWH4010-x12.txt -xl -dg C:\Diamond\PPIC\837-HIST -dt C:\Diamond\PPIC\837-HIST -n -it  -o -w -l -b -wx 1  -af C:\Diamond\out put\OUTPUT.TXT C:\PPIC-SCRUB\test-edi-hist\test-data-extract\uwhc-ext.txt
#
# SAME CMD ON UNIX:   ${rmi} "${bwd}/UWH4010-x12.txt -xl -dg ${bwd} -dt ${bwd} -n -it  -o -w -l -b -wx 1 -af C:\Diamond\output\OUTPUT.TXT ${bwd}/uwhc-ext.txt
#
#
#  CMD SYNTAX:         <executable> <edi_output_file> <map_name> <transaction_code>
#                -t    specify transaction   eg "-t ANY" for an ANY to ANY map
#                -ec   does not create the transaction log file
#                -dg   directory where map files are located
#                -dt   trading partner directory
#                -nt
#                -ne
#                -it
#                -o
#                -s
#                -z
#                -wx 0
#
#  EXT DATA FILES:
#
#  ENV VARIABLES:
#
#  INPUT:              Parameter 1 contains ....
#                      p1 my_ecrtp_ref_dir is the directory containing all of the required reference files for this map
#                      p2 my_output_dir is the directory where ecrtp will be executed and output will be created
#                      p3 my_input is the full path filename of the input EDI file
#                      p4 my_output is the basename of the output file (no path) "
#
#
#
#  OUTPUT:             the primary output file is specified in parameter 2,
#                      the other output files are the log files generated by mapinrun.
#
#
#  TEMPORARY FILES:
#
#  EXT FUNC CALLS:
#
#  EXT MOD CALLS:
#
#*******************************************************************************
# Date         Programmmer      Description
# ----------   --------------   ------------------------------------------
# 10/31/2007   J. Thiessen      Grandfathered from the PPIC version
# 01/13/2009   J. Thiessen      Added tr8 tr9 and tr10  
# 05/13/2009   J. Thiessen      Had to add variables WTS_DRIVE and WTS_CONNECT in .oracle_batch_profile
# 05/13/2009   J. Thiessen      Requires links in /asp/dhhsp/fpa/home/dhftpp/HIP/dhhsprd
#                                 ln -s ${BATCH_OUTPUT:-not_defined}_manual FPA_output_manual
#                                 ln -s ${BATCH_OUTPUT:-not_defined}_archive FPA_output_archive
#                                 ln -s ${BATCH_INPUT:-not_defined}_manual FPA_input_manual  
#                                 ln -s ${BATCH_INPUT:-not_defined}_archive FPA_input_archive
#                                 ln -s ${BATCH_SYSTEM:-not_defined}/jobs/running running 
#
# 05/17/2011   K. McDowell      Adjusted to PPIC from Denver Linux WTS_UNC and WTS_CONNECT in .oracle_batch_profile
#
# Version 1.0
#*******************************************************************************
#
##########################################################################
#   main script                                                          #
##########################################################################
. ~/.FPAprofile
. batchlog.ksh

setlog ${batch_prg}.${batch_start_dtm}

####  _____HOLDING_____  batchsync_filename=CPU_INTENSIVE.sync     # only allow one CPU_INTENSIVE program to run at a time.
####  _____HOLDING_____  batchstartsync
batchstart

usage="Usage: ${batch_prg} my_ecrtp_ref_dir my_output_dir my_input my_output
where my_ecrtp_ref_dir is the directory containing all of the required reference files for this map
and my_output_dir is the directory where ecrtp will be executed and output will be created
and my_input is the full path filename of the input file
and my_output is the basename of the output file (no path) "

num_args=${#}
if [ ${num_args} -ne 4 ]; then
  msg="ERROR -- Incorrect number of parameters.  ${usage}"
  batcherror_notify "${msg}"
fi

##  ####
##  ####  export the ecrtp envrionment  variables
##  ####
##  export ECRTP_HOME=/opt/ecrtp404
##  export LD_LIBRARY_PATH=$ECRTP_HOME/non_odbc:${LD_LIBRARY_PATH:-}  ## for Solaris
##  export SHLIB_PATH=$ECRTP_HOME/non_odbc:${SHLIB_PATH:-}            ## for HPUX
##  export LIBPATH=$ECRTP_HOME/non_odbc:${LIBPATH:-}                  ## for AIX

####
####  set the variables for this ecrtp map input run (mir)
####
set -A parameters $( echo ${*} | sed s:batch_working_directory:${batch_working_directory}:g )
my_ecrtp_ref_dir=${parameters[0]}
my_output_dir=${parameters[1]}
my_input=${parameters[2]}
#UNC#wts_input=${WTS_DRIVE:-OOPS}:$( echo ${my_input} | sed s:${BATCH_FTP}::g )
wts_input=${WTS_UNC:-OOPS}$( echo ${my_input} | sed s:${BATCH_FTP}::g )
my_output=${parameters[3]}
mir=D:/LINUX/ECRTP/wrmi32.exe     #### WAS --> mir=${ECRTP_HOME}/non_odbc/mapinrun
bwd=${batch_working_directory}
#UNC#wts_bwd="${WTS_DRIVE:-OOPS}:\\running\\$( basename ${batch_working_directory} )"
wts_bwd="${WTS_UNC:-OOPS}\\running\\$( basename ${batch_working_directory} )"
params="-xl -dg ${wts_bwd} -dt ${wts_bwd} -n -it  -o -w -l -b -wx 1"
tr1="-af C:\\Diamond\\output\\OUTPUT.TXT ${wts_bwd}\\${my_output}"
tr2="-af C:\\Diamond\\work\\ClaimHeaderDateWork ${wts_bwd}\\clm_dates.txt"
tr3="-af C:\\Diamond\\work\\ClaimHeaderCodesWork ${wts_bwd}\\clm_codes.txt"
tr4="-af C:\\Diamond\\work\\ClaimHeaderNotesWork ${wts_bwd}\\clm_notes.txt"
tr5="-af C:\\Diamond\\work\\ClaimHeaderProvidersWork ${wts_bwd}\\clm_provs.txt"
tr6="-af C:\\Diamond\\work\\ClaimServLinesDatesWork ${wts_bwd}\\serv_lines_dates.txt"
tr7="-af C:\\Diamond\\work\\ClaimServLineProvsWork ${wts_bwd}\\serv_lines_provs.txt"
tr8="-af C:\\Diamond\\work\\ClaimServLinesNotesWork ${wts_bwd}\\serv_lines_notes.txt"
tr9="-af C:\\Diamond\\work\\ClaimServLineAdjustWork ${wts_bwd}\\serv_lines_adjust.txt"
tr10="-af C:\\Diamond\\work\\ClmHdrTPLAdjust ${wts_bwd}\\tpl_adjust.txt"

####  
####  Check that input file exists.
####  
if [ ! -r ${my_input} ]; then
  batcherror_notify "ERROR -- Input file ${my_input} does not exist. "
fi

####
####  place the ecrtp configuration files (including the MAP file) in
####  batch_working_directory to be sure that the
####  mapinrun log files are included in the output from this run and
####  are not overwritten by other processes.
####  NOTE: ECRTP writes to customer.dbf and tradstat.dbf and
####  creates files incoming.err status.in translog.in if they do not already exist.
####
if [ -d ${my_ecrtp_ref_dir} ];then
  cp -p ${my_ecrtp_ref_dir}/* ${batch_working_directory}   # cp all of the ecrtp reference files preserving the dates and permissions
  chmod 770 ${batch_working_directory}/*
  ls -l ${batch_working_directory}
else
  batcherror_notify "ERROR -- Invalid Parameter 1, directory does not exist my_ecrtp_ref_dir=${my_ecrtp_ref_dir}"
fi

####
####  Run the ecrtp mapinrun process...
####
time ${WTS_CONNECT:-OOPS} ${mir} ${wts_input} ${params} ${tr1} ${tr2} ${tr3} ${tr4} ${tr5} ${tr6} ${tr7} ${tr8} ${tr9} ${tr10} >> ${batch_log}

ret_stat=$?

messagelog "COMPLETED ${0} with STATUS ${ret_stat}  ####################################################################"

####
####  Remove the configuration files from the batch_working_directory to prevent cluttering up BATCH_OUTPUT and the archives
####
for x in $( find ${my_ecrtp_ref_dir} \( -type d ! -name ${my_ecrtp_ref_dir##*/} -prune \) -o \( -type f -print \) )
do
  ##-> JPT Remove all original config files <-## if [ ${x} -ot ${bwd}/${x##*/} ];then
    ##-> JPT Remove all original config files <-## :   # let the FPA process the file if it was updated during this run
  ##-> JPT Remove all original config files <-## else
    echo "rm ${bwd}/${x##*/}" >> ${batch_log}
    rm ${bwd}/${x##*/} >> ${batch_log}
  ##-> JPT Remove all original config files <-## fi
done


####
####  Add a suffix for files with static names to prevent overwriting problems in BATCH_OUTPUT
####  20060112  J Thiessen
####
for x in $( find ${bwd} -type f -print )
do
  xbase=$( basename ${x} )
  xprefix=${xbase%%.*}
  xsuffix=${xbase##*.}
  ####  CLIENT SPECIFIC CODE IN NEXT LINE   ###########################
  if [[ "${xsuffix}" != "flat" && "${xprefix}" != "CHPEDIHist" && "${xsuffix}" != "ERROR" ]]; then
    echo "RENAME: mv ${bwd}/${xbase} ${bwd}/${xbase}.${my_output%.*}  " >> ${batch_log}
    mv ${bwd}/${xbase} ${bwd}/${xbase}.${my_output%.*}
  fi
done


####
####  Throw an error if this job did not create the expected output file
####  20080114  J Thiessen
####
if [ ! -s ${my_output} ]; then
  batcherror_notify "ERROR -- ecrtp_edi_history.ksh did not create the expected output file ${my_output}   The data was not loaded into EDIViewer.  "
fi

batchend
